var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.047,1,1.047]],["body/controllers/AppController.html",[0,0.939,1,0.939,2,0.96,3,0.6,4,0.477,5,0.477,6,0.96,7,0.477,8,1.18,9,2.311,10,2.774,11,1.991,12,2.452,13,1.991,14,2.452,15,3.011,16,0.088,17,1.991,18,1.784,19,1.272,20,1.784,21,2.74,22,1.272,23,3.016,24,1.991,25,1.272,26,1.644,27,1.644,28,1.309,29,1.644,30,2.272,31,1.272,32,1.991,33,1.272,34,1.85,35,1.272,36,1.991,37,1.272,38,1.85,39,1.272,40,2.093,41,1.991,42,1.272,43,1.502,44,1.157,45,1.272,46,1.272,47,1.272,48,1.272,49,0.477,50,0.96,51,0.96,52,0.96,53,0.6,54,0.723,55,0.96,56,0.6,57,0.6,58,0.96,59,1.272,60,1.272,61,2.272,62,1.272,63,0.96,64,1.272,65,1.272,66,1.272,67,1.272,68,1.272,69,1.272,70,1.272,71,1.272,72,1.272,73,0.041,74,0.041]],["title/modules/AppModule.html",[75,1.315,76,1.047]],["body/modules/AppModule.html",[1,1.591,2,2.249,3,1.043,4,0.83,5,0.83,16,0.087,44,1.703,49,0.83,54,1.145,55,1.668,56,1.043,57,1.043,73,0.061,74,0.061,75,1.767,76,1.903,77,1.31,78,1.406,79,1.668,80,1.668,81,1.145,82,2.249,83,1.668,84,1.668,85,2.211,86,2.981,87,2.211,88,1.668,89,2.211]],["title/injectables/AppService.html",[54,0.654,90,0.833]],["body/injectables/AppService.html",[3,0.469,4,0.373,5,0.373,7,0.373,8,0.968,9,2.259,16,0.089,18,1.79,20,1.694,21,2.655,23,2.783,26,1.694,27,1.79,28,1.349,29,1.694,30,2.006,34,1.569,38,1.569,40,1.569,43,1.232,44,1.136,49,0.373,50,0.75,51,0.75,52,1.569,53,0.469,54,0.482,56,0.469,57,0.469,58,0.75,61,2.157,63,0.75,73,0.033,74,0.033,81,0.71,88,0.75,90,0.613,91,0.589,92,0.75,93,2.408,94,1.634,95,1.634,96,2.079,97,1.634,98,0.995,99,0.995,100,0.995,101,2.079,102,0.995,103,1.634,104,0.995,105,1.634,106,0.995,107,0.995,108,0.995,109,1.634,110,2.079,111,0.995,112,1.634,113,2.079,114,0.995,115,0.995,116,0.995,117,0.995,118,2.859,119,2.859,120,1.569,121,1.634,122,2.408,123,2.006,124,1.569,125,1.634,126,1.634,127,1.634,128,1.634,129,0.995,130,0.995,131,1.634,132,0.995,133,0.995,134,0.995,135,1.634,136,1.634,137,0.995,138,2.079,139,0.995]],["title/injectables/PrismaService.html",[81,0.654,90,0.833]],["body/injectables/PrismaService.html",[3,0.973,4,0.774,5,0.774,7,0.774,8,1.684,9,2.309,16,0.088,18,1.684,20,1.684,26,1.222,27,1.222,28,0.973,29,1.222,44,1.341,49,0.774,53,0.973,56,0.973,57,0.973,73,0.058,74,0.058,81,0.838,90,1.067,91,1.222,120,2.144,140,1.556,141,2.843,142,3.253,143,2.843,144,3.803,145,2.843,146,3.507,147,2.062,148,1.556,149,2.062,150,2.062,151,2.062,152,2.062,153,2.062,154,2.062,155,2.062]],["title/coverage.html",[156,1.771]],["body/coverage.html",[0,1.257,1,1.257,5,1,6,2.01,16,0.084,28,1.257,54,0.786,73,0.069,74,0.069,81,0.786,90,1.264,92,2.01,123,2.927,140,2.01,156,1.579,157,2.665,158,2.665,159,2.665,160,2.665,161,2.665,162,2.01,163,2.665,164,2.01,165,2.665,166,2.665,167,2.665,168,2.665,169,2.665]],["title/dependencies.html",[78,1.254,170,1.413]],["body/dependencies.html",[16,0.088,49,1.059,53,1.332,73,0.071,74,0.071,78,1.332,171,3.791,172,2.823,173,2.823,174,2.823,175,2.823,176,2.823,177,2.823,178,2.823,179,2.823,180,2.823,181,2.823,182,2.823]],["title/miscellaneous/functions.html",[183,1.413,184,2.005]],["body/miscellaneous/functions.html",[7,1.184,16,0.076,73,0.076,74,0.076,162,2.381,164,3.001,183,2.381,184,2.381,185,3.156]],["title/index.html",[7,0.703,186,1.873,187,1.873]],["body/index.html",[4,0.731,16,0.086,73,0.056,74,0.056,148,1.471,156,1.155,188,1.95,189,1.95,190,2.734,191,1.95,192,1.95,193,1.95,194,1.95,195,1.95,196,1.95,197,1.471,198,3.157,199,1.95,200,1.95,201,1.95,202,1.95,203,3.837,204,1.95,205,1.95,206,3.736,207,1.95,208,1.95,209,2.734,210,1.95,211,1.95,212,1.95,213,1.95,214,2.734,215,2.734,216,1.95,217,1.95,218,1.95,219,2.734,220,2.734,221,1.95,222,1.95,223,1.95,224,1.95,225,1.95,226,1.471,227,1.95,228,1.95,229,1.95,230,1.95,231,1.95,232,1.95,233,1.95,234,1.95,235,1.95,236,1.95,237,1.471,238,1.95,239,1.95,240,1.95,241,1.95,242,1.95,243,1.95,244,1.471]],["title/modules.html",[77,1.771]],["body/modules.html",[16,0.077,73,0.077,74,0.077,76,1.511,77,1.898,226,2.416,245,3.203,246,3.203,247,3.203]],["title/overview.html",[248,2.254]],["body/overview.html",[0,1.289,16,0.08,54,1.101,73,0.07,74,0.07,75,1.62,76,1.94,78,1.614,79,2.062,80,2.062,81,1.101,82,2.581,83,2.062,84,2.062,91,1.62,124,2.581,248,2.062,249,2.733]],["title/properties.html",[170,1.413,250,2.005]],["body/properties.html",[16,0.087,73,0.075,74,0.075,197,2.329,237,2.329,244,2.329,250,2.329,251,3.088,252,3.088,253,3.088]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":252,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"overview.html":{}}}],["2",{"_index":249,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["3.12.0",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["allcategories",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["allproducts",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["allproducts(token",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["amazing",{"_index":227,"title":{},"body":{"index.html":{}}}],["app",{"_index":148,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":155,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":196,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":76,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":54,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["author",{"_index":237,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":228,"title":{},"body":{"index.html":{}}}],["body",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["body('password",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["body('userid",{"_index":70,"title":{},"body":{"controllers/AppController.html":{}}}],["bootstrap",{"_index":164,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":247,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":245,"title":{},"body":{"modules.html":{}}}],["building",{"_index":191,"title":{},"body":{"index.html":{}}}],["category",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["checkifhashexists",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["checkifhashexists(token",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["class",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["cluster_appmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["connected",{"_index":152,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log('db",{"_index":151,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":118,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(prisma",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":156,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createhash",{"_index":115,"title":{},"body":{"injectables/AppService.html":{}}}],["createhash('md5",{"_index":132,"title":{},"body":{"injectables/AppService.html":{}}}],["crypto",{"_index":116,"title":{},"body":{"injectables/AppService.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["defined",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["dependencies",{"_index":78,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":197,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":205,"title":{},"body":{"index.html":{}}}],["digest('hex",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":157,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":216,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":192,"title":{},"body":{"index.html":{}}}],["email",{"_index":139,"title":{},"body":{"injectables/AppService.html":{}}}],["enableshutdownhooks",{"_index":143,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":145,"title":{},"body":{"injectables/PrismaService.html":{}}}],["export",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["express",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":141,"title":{},"body":{"injectables/PrismaService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["framework",{"_index":190,"title":{},"body":{"index.html":{}}}],["function",{"_index":163,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":184,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('categories",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get('products",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["get('productsfromlist",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["get('user/:id",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["getallcategories",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getallproducts",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["getallproducts(@query('token",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["getallproducts(token",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["getproductsfromlist",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getproductsfromlist(productsids",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":186,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getuser(@param('id",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["getuser(id",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["grow",{"_index":223,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":234,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":241,"title":{},"body":{"index.html":{}}}],["id",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["identifier",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":150,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":146,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["injectable",{"_index":90,"title":{"injectables/AppService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["installation",{"_index":202,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":204,"title":{},"body":{"index.html":{}}}],["ispublic",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["isuserauth",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["join",{"_index":230,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":238,"title":{},"body":{"index.html":{}}}],["license",{"_index":244,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":220,"title":{},"body":{"index.html":{}}}],["listedproducts",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["listedproducts(token",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["login",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["login(id",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["loguser",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["loguser(userid",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["matching",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["miscellaneous",{"_index":183,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":219,"title":{},"body":{"index.html":{}}}],["mode",{"_index":209,"title":{},"body":{"index.html":{}}}],["module",{"_index":75,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":77,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":233,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":239,"title":{},"body":{"index.html":{}}}],["name",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["nest",{"_index":198,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":243,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":189,"title":{},"body":{"index.html":{}}}],["npm",{"_index":203,"title":{},"body":{"index.html":{}}}],["number",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["number(id",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["onmoduleinit",{"_index":144,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":221,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":248,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":170,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["password",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["password_hash",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["please",{"_index":231,"title":{},"body":{"index.html":{}}}],["post",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["post('login",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["prisma",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["prisma.service",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["prisma/client",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":142,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":81,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["product",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["production",{"_index":211,"title":{},"body":{"index.html":{}}}],["productsids",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["productsids.split(',').map((id",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["productsidsarr",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["progressive",{"_index":188,"title":{},"body":{"index.html":{}}}],["project",{"_index":222,"title":{},"body":{"index.html":{}}}],["promise",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["properties",{"_index":250,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["query",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["query('products",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["query('token",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["read",{"_index":232,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":201,"title":{},"body":{"index.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{}}}],["rimraf",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":206,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":193,"title":{},"body":{"index.html":{}}}],["select",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["server",{"_index":194,"title":{},"body":{"index.html":{}}}],["side",{"_index":195,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["sponsors",{"_index":225,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:17",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:24",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:28",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:10",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:15",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:25",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:40",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:43",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:58",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":162,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma.service.ts",{"_index":140,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:11",{"_index":147,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma.service.ts:6",{"_index":149,"title":{},"body":{"injectables/PrismaService.html":{}}}],["start",{"_index":207,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":210,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":212,"title":{},"body":{"index.html":{}}}],["started",{"_index":187,"title":{"index.html":{}},"body":{}}],["starter",{"_index":200,"title":{},"body":{"index.html":{}}}],["statements",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":235,"title":{},"body":{"index.html":{}}}],["string",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["support",{"_index":226,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":246,"title":{},"body":{"modules.html":{}}}],["table",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":215,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":218,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":217,"title":{},"body":{"index.html":{}}}],["tests",{"_index":214,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":224,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":153,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":154,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.allcategories",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.allproducts(token",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.listedproducts(token",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.login(number(userid",{"_index":72,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.user",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["this.checkifhashexists(token",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prisma.category.findmany",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prisma.product.findmany",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prisma.user.findfirst",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["this.prisma.user.findunique",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["token",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["touch",{"_index":236,"title":{},"body":{"index.html":{}}}],["true",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["twitter",{"_index":242,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["typescript",{"_index":199,"title":{},"body":{"index.html":{}}}],["unit",{"_index":213,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":253,"title":{},"body":{"properties.html":{}}}],["update(`${id}${password",{"_index":133,"title":{},"body":{"injectables/AppService.html":{}}}],["user",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["user(userid",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["userid",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["version",{"_index":251,"title":{},"body":{"properties.html":{}}}],["visible_authenticated",{"_index":126,"title":{},"body":{"injectables/AppService.html":{}}}],["visible_public",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["watch",{"_index":208,"title":{},"body":{"index.html":{}}}],["website",{"_index":240,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":229,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllCategories\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProductsFromList\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                logUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('categories')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts(token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('products/')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductsFromList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductsFromList(productsIds: string, token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('productsfromList/')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsIds\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    logUser(userId: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Query } from '@nestjs/common';\nimport { Category, Product, User } from '@prisma/client';\nimport { AppService } from './app.service';\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('user/:id')\n  async getUser(@Param('id') id: string): Promise {\n    return this.appService.user({ id: Number(id) });\n  }\n  @Get('products/')\n  async getAllProducts(@Query('token') token: string): Promise {\n    return this.appService.allProducts(token);\n  }\n  @Get('productsfromList/')\n  async getProductsFromList(\n    @Query('products') productsIds: string,\n    @Query('token') token: string,\n  ): Promise {\n    return this.appService.listedProducts(token, productsIds);\n  }\n  @Get('categories')\n  async getAllCategories(): Promise {\n    return this.appService.allCategories();\n  }\n  @Post('login')\n  async logUser(\n    @Body('userId') userId: string,\n    @Body('password') password: string,\n  ): Promise> {\n    return this.appService.login(Number(userId), password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                allCategories\n                            \n                            \n                                    Async\n                                allProducts\n                            \n                            \n                                    Async\n                                checkIfHashExists\n                            \n                            \n                                    Async\n                                listedProducts\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    allCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    allProducts(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkIfHashExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHashExists(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listedProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    listedProducts(token: string, productsIds: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productsIds\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(id: number, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userId: Prisma.UserWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            Prisma.UserWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createHash } from 'crypto';\nimport { Category, Prisma, Product, User } from '@prisma/client';\nimport { PrismaService } from './prisma.service';\n\n@Injectable()\nexport class AppService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(userId: Prisma.UserWhereUniqueInput): Promise {\n    return this.prisma.user.findUnique({\n      where: userId,\n    });\n  }\n  async allProducts(token: string): Promise {\n    const isUserAuth = await this.checkIfHashExists(token);\n    const isPublic = isUserAuth === 0 ? 1 : 0;\n    return this.prisma.product.findMany({\n      where: {\n        visible_authenticated: isUserAuth,\n        visible_public: isPublic,\n      },\n    });\n  }\n  async listedProducts(\n    token: string,\n    productsIds: string,\n  ): Promise {\n    const productsIdsArr = productsIds.split(',').map((id) => Number(id));\n    const isUserAuth = await this.checkIfHashExists(token);\n    const isPublic = isUserAuth === 0 ? 1 : 0;\n    return this.prisma.product.findMany({\n      where: {\n        id: { in: productsIdsArr },\n        visible_authenticated: isUserAuth,\n        visible_public: isPublic,\n      },\n    });\n  }\n  async allCategories(): Promise {\n    return this.prisma.category.findMany();\n  }\n  async login(id: number, password: string): Promise> {\n    const hashedPassword = createHash('md5')\n      .update(`${id}${password}`)\n      .digest('hex');\n    return this.prisma.user.findFirst({\n      where: {\n        password_hash: hashedPassword,\n      },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n      },\n    });\n  }\n  async checkIfHashExists(token: string): Promise {\n    return (await this.prisma.user.findFirst({\n      where: {\n        password_hash: token || '',\n      },\n    }))\n      ? 1\n      : 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    console.log('db connected');\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @prisma/client : ^3.12.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
